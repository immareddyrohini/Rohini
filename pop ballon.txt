import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class BalloonView extends View {

    private static final int BALLOON_RADIUS = 50;
    private static final int BALLOON_SPEED = 10;
    private static final int BALLOON_COLOR = Color.RED;

    private List<Balloon> balloons;
    private Paint paint;
    private Random random;

    public BalloonView(Context context, AttributeSet attrs) {
        super(context, attrs);
        balloons = new ArrayList<>();
        paint = new Paint();
        random = new Random();
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        for (Balloon balloon : balloons) {
            paint.setColor(balloon.color);
            canvas.drawCircle(balloon.x, balloon.y, balloon.radius, paint);
        }
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        if (event.getAction() == MotionEvent.ACTION_DOWN) {
            float touchX = event.getX();
            float touchY = event.getY();
            popBalloon(touchX, touchY);
        }
        return super.onTouchEvent(event);
    }

    private void popBalloon(float touchX, float touchY) {
        for (Balloon balloon : balloons) {
            double distance = Math.sqrt(Math.pow(touchX - balloon.x, 2) + Math.pow(touchY - balloon.y, 2));
            if (distance <= balloon.radius) {
                balloons.remove(balloon);
                break;
            }
        }
        invalidate();
    }

    public void addBalloon() {
        int x = random.nextInt(getWidth());
        int y = getHeight();
        balloons.add(new Balloon(x, y, BALLOON_RADIUS, BALLOON_COLOR));
        invalidate();
    }

    public void moveBalloons() {
        for (Balloon balloon : balloons) {
            balloon.y -= BALLOON_SPEED;
        }
        invalidate();
    }

    private static class Balloon {
        int x, y, radius, color;

        public Balloon(int x, int y, int radius, int color) {
            this.x = x;
            this.y = y;
            this.radius = radius;
            this.color = color;
        }
    }
}
